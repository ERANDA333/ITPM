{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\support-ed-v1\\\\src\\\\components\\\\FormText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Stack } from '@mui/material';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [password, setPassword] = useState('');\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(firstName, lastName, email, dateOfBirth, password);\n  }\n  const validate = () => {\n    let temp = {};\n    temp.firstName = firstName.firstName ? \"\" : \"This field is required.\";\n    temp.email = /$|.+@.+..+/.test(email.email) ? \"\" : \"This field is required.\";\n    temp.firstName = values.firstName ? \"\" : \"This field is required.\";\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        action: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 51\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          direction: \"row\",\n          sx: {\n            marginBottom: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"secondary\",\n            label: \"First Name\",\n            onChange: e => setFirstName(e.target.value),\n            value: firstName,\n            fullWidth: true,\n            required: true,\n            error: true,\n            helperText: \"enter value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"secondary\",\n            label: \"Last Name\",\n            onChange: e => setLastName(e.target.value),\n            value: lastName,\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"email\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          label: \"Email\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          fullWidth: true,\n          required: true,\n          sx: {\n            mb: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          label: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          fullWidth: true,\n          sx: {\n            mb: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          label: \"Date of Birth\",\n          onChange: e => setDateOfBirth(e.target.value),\n          value: dateOfBirth,\n          fullWidth: true,\n          required: true,\n          sx: {\n            mb: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"eOQbwatjVBs+3qVj7a4nB1ISD5I=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Stack","Link","jsxDEV","_jsxDEV","RegisterForm","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","dateOfBirth","setDateOfBirth","password","setPassword","handleSubmit","event","preventDefault","console","log","validate","temp","test","values","maxWidth","children","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","action","to","spacing","direction","sx","marginBottom","type","variant","color","label","onChange","e","target","value","fullWidth","required","error","helperText","mb","_c","$RefreshReg$"],"sources":["C:/react/support-ed-v1/src/components/FormText.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { TextField, Button, Container, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\"\r\n \r\n \r\nconst RegisterForm = () => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [password, setPassword] = useState('')\r\n \r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(firstName, lastName, email, dateOfBirth, password) \r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.firstName = firstName.firstName?\"\":\"This field is required.\"\r\n        temp.email = (/$|.+@.+..+/).test(email.email)?\"\":\"This field is required.\"\r\n        temp.firstName = values.firstName?\"\":\"This field is required.\"\r\n\r\n    }\r\n \r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n        <React.Fragment>\r\n            <h2>Register Form</h2>\r\n            <form onSubmit={handleSubmit} action={<Link to=\"/login\" />}>\r\n                <Stack spacing={2} direction=\"row\" sx={{marginBottom: 4}}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        label=\"First Name\"\r\n                        onChange={e => setFirstName(e.target.value)}\r\n                        value={firstName}\r\n                        fullWidth\r\n                        required\r\n                        error\r\n                        helperText= 'enter value'\r\n                    />\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        label=\"Last Name\"\r\n                        onChange={e => setLastName(e.target.value)}\r\n                        value={lastName}\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                </Stack>\r\n                <TextField\r\n                    type=\"email\"\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    label=\"Email\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    value={email}\r\n                    fullWidth\r\n                    required\r\n                    sx={{mb: 4}}\r\n                />\r\n                <TextField\r\n                    type=\"password\"\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    label=\"Password\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    value={password}\r\n                    required\r\n                    fullWidth\r\n                    sx={{mb: 4}}\r\n                />\r\n                <TextField\r\n                    type=\"date\"\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    label=\"Date of Birth\"\r\n                    onChange={e => setDateOfBirth(e.target.value)}\r\n                    value={dateOfBirth}\r\n                    fullWidth\r\n                    required\r\n                    sx={{mb: 4}}\r\n                />\r\n                <Button variant=\"outlined\" color=\"secondary\" type=\"submit\">Register</Button>\r\n            </form>\r\n            <small>Already have an account? <Link to=\"/login\">Login Here</Link></small>\r\n     \r\n        </React.Fragment>\r\n        </Container>\r\n    )\r\n}\r\n \r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}